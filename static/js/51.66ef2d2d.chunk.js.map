{"version":3,"file":"static/js/51.66ef2d2d.chunk.js","mappings":"2QAEaA,EAAWC,EAAAA,GAAAA,GAAH,8FAMRC,EAAQD,EAAAA,GAAAA,IAAH,gFAMLE,EAAWF,EAAAA,GAAAA,IAAH,oH,SCyBrB,EAjCa,WACX,IAAMG,ECHuB,WAC7B,OAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOD,EAAP,KAAaE,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaH,GACVI,KAAKL,GACLM,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACN,IAEGH,CACR,CDRcY,GAEb,OAAKZ,GAGH,SAAC,IAAD,CAAKa,GAAG,MAAMC,EAAE,OAAhB,SACGd,EAAKe,OAAS,GACb,SAAC,IAAD,CAAKF,GAAG,KAAKG,QAAQ,OAAOC,SAAS,OAAOC,QAAS,GAArD,SACGlB,EAAKmB,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAWC,EAApB,EAAoBA,aAAcC,EAAlC,EAAkCA,GAAlC,OACR,UAAC,EAAD,YACE,SAAC,EAAD,CACEC,IAAKF,EAAeG,EAAAA,GAAgBH,EAAeI,EAAAA,EACnDC,IAAKP,EACLQ,MAAM,MACNC,QAAQ,UAEV,UAAC,EAAD,YACE,uBAAIT,KACJ,0BACE,uCADF,IACsBC,UAVRE,EADV,OAkBZ,yCAxBY,IA4BnB,C,8EExBYO,GAAMjC,EAAAA,EAAAA,IAAO,MAAPA,CACjBkC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,G,2NCnBIC,EAAM,mCACZC,EAAAA,GAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAW,mCAAG,uGACFD,EAAAA,EAAAA,IAAM,sBAAuB,CAClDE,OAAQ,CACNC,QAASJ,KAHY,uBACjBK,EADiB,EACjBA,KADiB,kBAOlBA,EAAKC,SAPa,2CAAH,qDAUXC,EAAe,mCAAG,WAAM3C,GAAN,0FACNqC,EAAAA,EAAAA,IAAM,UAAD,OAAWrC,GAAW,CAChDuC,OAAQ,CACNC,QAASJ,KAHgB,uBACrBK,EADqB,EACrBA,KADqB,kBAOtBA,GAPsB,2CAAH,sDAUftC,EAAY,mCAAG,WAAMH,GAAN,0FACHqC,EAAAA,EAAAA,IAAM,UAAD,OAAWrC,EAAX,YAA8B,CACxDuC,OAAQ,CACNC,QAASJ,KAHa,uBAClBK,EADkB,EAClBA,KADkB,kBAOnBA,EAAK5C,MAPc,2CAAH,sDAUZ+C,EAAe,mCAAG,WAAM5C,GAAN,0FACNqC,EAAAA,EAAAA,IAAM,UAAD,OAAWrC,EAAX,YAA8B,CACxDuC,OAAQ,CACNC,QAASJ,KAHgB,uBACrBK,EADqB,EACrBA,KADqB,kBAOtBA,EAAKC,SAPiB,2CAAH,sDAUfG,EAAe,mCAAG,WAAMC,GAAN,0FACNT,EAAAA,EAAAA,IAAM,gBAAiB,CAC5CE,OAAQ,CACNC,QAASJ,EACTW,eAAe,EACfD,MAAAA,KALyB,uBACrBL,EADqB,EACrBA,KADqB,kBAStBA,EAAKC,SATiB,2CAAH,sDAYfpB,EAAgB,iC,uDCzDtB,IAAMC,EACX,4D","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","hooks/useGetMovieCast.jsx","utils/Box.styled.js","utils/api/api.js","utils/services.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastItem = styled.li`\n  width: 200px;\n  background-color: #e0e9e9;\n  border-radius: 5px;\n`;\n\nexport const Photo = styled.img`\n  width: 200px;\n  height: 300px;\n  overflow: hidden;\n`;\n\nexport const NameRole = styled.div`\n  padding: 8px;\n  width: 200px;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n","import { useGetMovieCast } from 'hooks/useGetMovieCast';\nimport { startImageUrl } from 'utils/api/api';\nimport { Box } from 'utils/Box.styled';\nimport { noImage } from 'utils/services';\nimport * as SC from './Cast.styled';\n\nconst Cast = () => {\n  const cast = useGetMovieCast();\n\n  if (!cast) return null;\n\n  return (\n    <Box as=\"div\" p=\"20px\">\n      {cast.length > 0 ? (\n        <Box as=\"ul\" display=\"flex\" flexWrap=\"wrap\" gridGap={20}>\n          {cast.map(({ name, character, profile_path, id }) => (\n            <SC.CastItem key={id}>\n              <SC.Photo\n                src={profile_path ? startImageUrl + profile_path : noImage}\n                alt={name}\n                width=\"200\"\n                loading=\"lazy\"\n              />\n              <SC.NameRole>\n                <p>{name}</p>\n                <p>\n                  <b>Character: </b> {character}\n                </p>\n              </SC.NameRole>\n            </SC.CastItem>\n          ))}\n        </Box>\n      ) : (\n        <p>No cast : (</p>\n      )}\n    </Box>\n  );\n};\n\nexport default Cast;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from 'utils/api/api';\n\nexport const useGetMovieCast = () => {\n  const [cast, setCast] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieCast(movieId)\n      .then(setCast)\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  return cast;\n};\n","import styled from 'styled-components';\n\nimport {\n  border,\n  color,\n  flexbox,\n  space,\n  layout,\n  shadow,\n  typography,\n  grid,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  border,\n  color,\n  flexbox,\n  shadow,\n  layout,\n  space,\n  typography,\n  grid\n);\n","import axios from 'axios';\n\nconst KEY = 'fc60a6bdb24ebf37b614cab96927d720';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrending = async () => {\n  const { data } = await axios('/trending/movie/day', {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios(`/movie/${movieId}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return data.results;\n};\n\nexport const getSearchMovies = async query => {\n  const { data } = await axios('/search/movie', {\n    params: {\n      api_key: KEY,\n      include_adult: false,\n      query,\n    },\n  });\n\n  return data.results;\n};\n\nexport const startImageUrl = 'https://image.tmdb.org/t/p/w500';\n","export const noImage =\n  'https://dummyimage.com/200x300/bab8ba/000&text=No+photo+;(';\n"],"names":["CastItem","styled","Photo","NameRole","cast","useState","setCast","movieId","useParams","useEffect","getMovieCast","then","catch","error","console","log","useGetMovieCast","as","p","length","display","flexWrap","gridGap","map","name","character","profile_path","id","src","startImageUrl","noImage","alt","width","loading","Box","border","color","flexbox","shadow","layout","space","typography","grid","KEY","axios","getTrending","params","api_key","data","results","getMovieDetails","getMovieReviews","getSearchMovies","query","include_adult"],"sourceRoot":""}