{"version":3,"file":"static/js/592.e0558a38.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/SearchBar/Searchbox.styled.js","components/SearchBar/Searchbox.jsx","components/MoviesSearchResult/MoviesSearchResult.styled.js","components/MoviesSearchResult/MoviesSearchResult.jsx","pages/Movies/Movies.jsx","hooks/useGetSearchMovies.jsx","utils/Box.styled.js","utils/api/api.js","utils/services.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderContainer = styled.div`\n  display: flex;\n  justify-content: center;\n\n  width: 100%;\n`;\n","import { ProgressBar } from 'react-loader-spinner';\n\nimport * as SC from './Loader.styled';\nexport const Loader = () => (\n  <SC.LoaderContainer>\n    <ProgressBar\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"progress-bar-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"progress-bar-wrapper\"\n      borderColor=\"#ffa726\"\n      barColor=\"#ffa726\"\n    />\n  </SC.LoaderContainer>\n);\n","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormBtn = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 10px;\n  padding-right: 4px;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const SearchWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 20px;\n`;\n","import { FcSearch } from 'react-icons/fc';\nimport * as SC from './Searchbox.styled';\n\nimport { useState } from 'react';\n\nconst Searchbox = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleChange = event => {\n    const { value } = event.target;\n\n    setQuery(value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    onSubmit(query);\n\n    setQuery('');\n  };\n\n  return (\n    <SC.SearchWrapper>\n      <SC.SearchForm onSubmit={handleSubmit}>\n        <SC.SearchFormInput\n          type=\"text\"\n          name=\"search\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search films\"\n          value={query}\n          onChange={handleChange}\n        />\n        <SC.SearchFormBtn type=\"submit\">\n          <FcSearch style={{ width: 30, height: 30 }} />\n        </SC.SearchFormBtn>\n      </SC.SearchForm>\n    </SC.SearchWrapper>\n  );\n};\n\nexport default Searchbox;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  color: black;\n`;\n\nexport const MovieListItem = styled.li`\n  width: 200px;\n  cursor: pointer;\n  border-radius: 5px;\n  background-color: #e0e9e9;\n  overflow: hidden;\n`;\n\nexport const Photo = styled.img`\n  width: 200px;\n  height: 300px;\n`;\n\nexport const TitleRating = styled.div`\n  padding: 8px;\n  width: 200px;\n  height: 90px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  gap: 8px;\n`;\n\nexport const Rating = styled.p`\n  font-size: 18px;\n  padding: 4px 8px;\n  border-radius: 5px;\n  border: 1px solid black;\n  display: inline-block;\n  text-align: center;\n\n  background-color: ${({ rating }) => {\n    if (rating > 7) {\n      return '#6c3';\n    }\n    if (rating >= 4 && rating <= 7) {\n      return '#fc0';\n    }\n    if (rating > 0 && rating < 4) return '#f00';\n\n    return '#00f';\n  }};\n\n  color: ${({ rating }) => (rating >= 4 && rating <= 7 ? 'black' : 'white')};\n`;\n","import { useLocation } from 'react-router-dom';\nimport { startImageUrl } from 'utils/api/api';\nimport { Box } from 'utils/Box.styled';\nimport { noImage } from 'utils/services';\nimport * as SC from '../MoviesSearchResult/MoviesSearchResult.styled';\n\nconst MoviesSearchResult = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <Box\n      as=\"ul\"\n      display=\"flex\"\n      flexWrap=\"wrap\"\n      gridGap={20}\n      justifyContent=\"center\"\n    >\n      {movies.map(({ id, title, poster_path, vote_average }) => (\n        <SC.MovieListItem key={id}>\n          <SC.MovieLink to={`/movies/${id}`} state={{ from: location }}>\n            <SC.Photo\n              src={poster_path ? startImageUrl + poster_path : noImage}\n              alt={title}\n              width=\"200px\"\n            />\n\n            <SC.TitleRating>\n              <b>{title}</b>\n              {vote_average > 1 ? (\n                <SC.Rating rating={vote_average.toFixed()}>\n                  {(vote_average * 10).toFixed(2)}%\n                </SC.Rating>\n              ) : (\n                <SC.Rating rating={vote_average.toFixed()}>\n                  <p>No rating</p>\n                </SC.Rating>\n              )}\n            </SC.TitleRating>\n          </SC.MovieLink>\n        </SC.MovieListItem>\n      ))}\n    </Box>\n  );\n};\n\nexport default MoviesSearchResult;\n","import { Box } from 'utils/Box.styled';\n\nimport Searchbox from 'components/SearchBar/Searchbox';\nimport MoviesSearchResult from '../../components/MoviesSearchResult/MoviesSearchResult';\n\nimport { useGetSearchMovies } from 'hooks/useGetSearchMovies';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Movies = () => {\n  const { handleFormSubmit, isEmpty, success, loading, movies } =\n    useGetSearchMovies();\n\n  return (\n    <Box p=\"20px\" m=\"0 auto\">\n      <Searchbox onSubmit={handleFormSubmit} />\n      {loading && <Loader />}\n\n      {isEmpty && (\n        <Box as=\"h3\" textAlign=\"center\">\n          ❌ Movies not found...\n        </Box>\n      )}\n\n      {success && <MoviesSearchResult movies={movies} />}\n    </Box>\n  );\n};\n\nexport default Movies;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchMovies } from 'utils/api/api';\n\nimport { toast } from 'react-hot-toast';\n\nexport const useGetSearchMovies = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [isEmpty, setIsEmpty] = useState(false);\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!query) return;\n\n    const findMovies = async () => {\n      setLoading(true);\n\n      try {\n        const films = await getSearchMovies(query);\n\n        if (!films.length) {\n          return setIsEmpty(true);\n        }\n\n        setMovies(films);\n        setSuccess(true);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    findMovies();\n  }, [query, isEmpty]);\n\n  const handleFormSubmit = value => {\n    setSearchQuery(value);\n\n    const query = value.trim();\n\n    if (query === '') {\n      return toast('Type something!', {\n        icon: '😕',\n      });\n    }\n\n    setSearchParams({ query });\n\n    setIsEmpty(false);\n\n    setMovies([]);\n  };\n\n  return { handleFormSubmit, isEmpty, searchQuery, success, loading, movies };\n};\n","import styled from 'styled-components';\n\nimport {\n  border,\n  color,\n  flexbox,\n  space,\n  layout,\n  shadow,\n  typography,\n  grid,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  border,\n  color,\n  flexbox,\n  shadow,\n  layout,\n  space,\n  typography,\n  grid\n);\n","import axios from 'axios';\n\nconst KEY = 'fc60a6bdb24ebf37b614cab96927d720';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrending = async () => {\n  const { data } = await axios('/trending/movie/day', {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios(`/movie/${movieId}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return data.results;\n};\n\nexport const getSearchMovies = async query => {\n  const { data } = await axios('/search/movie', {\n    params: {\n      api_key: KEY,\n      include_adult: false,\n      query,\n    },\n  });\n\n  return data.results;\n};\n\nexport const startImageUrl = 'https://image.tmdb.org/t/p/w500';\n","export const noImage =\n  'https://dummyimage.com/200x300/bab8ba/000&text=No+photo+;(';\n"],"names":["LoaderContainer","styled","Loader","height","width","ariaLabel","wrapperStyle","wrapperClass","borderColor","barColor","SearchForm","SearchFormBtn","SearchFormInput","SearchWrapper","onSubmit","useState","query","setQuery","event","preventDefault","type","name","autoComplete","autoFocus","placeholder","value","onChange","target","style","MovieLink","Link","MovieListItem","Photo","TitleRating","Rating","rating","movies","location","useLocation","as","display","flexWrap","gridGap","justifyContent","map","id","title","poster_path","vote_average","to","state","from","src","startImageUrl","noImage","alt","toFixed","searchQuery","setSearchQuery","setMovies","loading","setLoading","success","setSuccess","useSearchParams","searchParams","setSearchParams","isEmpty","setIsEmpty","get","useEffect","findMovies","getSearchMovies","films","length","console","log","handleFormSubmit","trim","toast","icon","useGetSearchMovies","p","m","textAlign","Box","border","color","flexbox","shadow","layout","space","typography","grid","KEY","axios","getTrending","params","api_key","data","results","getMovieDetails","movieId","getMovieCast","cast","getMovieReviews","include_adult"],"sourceRoot":""}