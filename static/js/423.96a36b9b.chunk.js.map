{"version":3,"file":"static/js/423.96a36b9b.chunk.js","mappings":"gQAEaA,EAAcC,EAAAA,GAAAA,GAAH,mFAMXC,EAASD,EAAAA,GAAAA,GAAH,uJ,SC8BnB,EAlCgB,WACd,IAAME,ECD0B,WAChC,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOH,EAAP,KAAgBI,EAAhB,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBL,GACbM,KAAKH,GACLI,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACR,IAEGD,CACR,CDViBY,GAEhB,OAAKZ,GAGH,SAAC,IAAD,CAAKa,GAAG,MAAMC,EAAE,OAAhB,SACGd,EAAQe,OAAS,GAChB,SAAC,EAAD,UACGf,EAAQgB,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAAIC,EAAxB,EAAwBA,WAAxB,OACX,UAAC,EAAD,YACE,qCAAaH,MACb,wBACE,sCAEF,uBAAIC,IAAoB,wCACxB,0BACE,iCAAa,IACZE,EACC,IAAIC,KAAKD,GAAYE,mBAAmB,UAExC,wCAXUH,EADL,OAmBf,4EAzBe,IA6BtB,C,8EEvBYI,GAAMzB,EAAAA,EAAAA,IAAO,MAAPA,CACjB0B,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,G,2NCnBIC,EAAM,mCACZC,EAAAA,GAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAW,mCAAG,uGACFD,EAAAA,EAAAA,IAAM,sBAAuB,CAClDE,OAAQ,CACNC,QAASJ,KAHY,uBACjBK,EADiB,EACjBA,KADiB,kBAOlBA,EAAKC,SAPa,2CAAH,qDAUXC,EAAe,mCAAG,WAAMtC,GAAN,0FACNgC,EAAAA,EAAAA,IAAM,UAAD,OAAWhC,GAAW,CAChDkC,OAAQ,CACNC,QAASJ,KAHgB,uBACrBK,EADqB,EACrBA,KADqB,kBAOtBA,GAPsB,2CAAH,sDAUfG,EAAY,mCAAG,WAAMvC,GAAN,0FACHgC,EAAAA,EAAAA,IAAM,UAAD,OAAWhC,EAAX,YAA8B,CACxDkC,OAAQ,CACNC,QAASJ,KAHa,uBAClBK,EADkB,EAClBA,KADkB,kBAOnBA,EAAKI,MAPc,2CAAH,sDAUZnC,EAAe,mCAAG,WAAML,GAAN,0FACNgC,EAAAA,EAAAA,IAAM,UAAD,OAAWhC,EAAX,YAA8B,CACxDkC,OAAQ,CACNC,QAASJ,KAHgB,uBACrBK,EADqB,EACrBA,KADqB,kBAOtBA,EAAKC,SAPiB,2CAAH,sDAUfI,EAAe,mCAAG,WAAMC,GAAN,0FACNV,EAAAA,EAAAA,IAAM,gBAAiB,CAC5CE,OAAQ,CACNC,QAASJ,EACTY,eAAe,EACfD,MAAAA,KALyB,uBACrBN,EADqB,EACrBA,KADqB,kBAStBA,EAAKC,SATiB,2CAAH,sDAYfO,EAAgB,iC","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","hooks/useGetMovieReviews.jsx","utils/Box.styled.js","utils/api/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n`;\n\nexport const Review = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  background-color: white;\n  border-radius: 5px;\n  padding: 6px;\n`;\n","import { useGetMovieReviews } from 'hooks/useGetMovieReviews';\nimport { Box } from 'utils/Box.styled';\nimport * as SC from '../Reviews/Reviews.styled';\n\nconst Reviews = () => {\n  const reviews = useGetMovieReviews();\n\n  if (!reviews) return null;\n\n  return (\n    <Box as=\"div\" p=\"20px\">\n      {reviews.length > 0 ? (\n        <SC.ReviewsList>\n          {reviews.map(({ author, content, id, created_at }) => (\n            <SC.Review key={id}>\n              <h3>Author: {author}</h3>\n              <p>\n                <b>Review:</b>\n              </p>\n              <p>{content ? content : <p>No review</p>}</p>\n              <p>\n                <b>Date:</b>{' '}\n                {created_at ? (\n                  new Date(created_at).toLocaleDateString('en-US')\n                ) : (\n                  <p>No date</p>\n                )}\n              </p>\n            </SC.Review>\n          ))}\n        </SC.ReviewsList>\n      ) : (\n        <p>We don't have any reviews for this movie, yet.</p>\n      )}\n    </Box>\n  );\n};\n\nexport default Reviews;\n","import { useEffect, useState } from 'react';\nimport { getMovieReviews } from 'utils/api/api';\nimport { useParams } from 'react-router-dom';\n\nexport const useGetMovieReviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    getMovieReviews(movieId)\n      .then(setReviews)\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  return reviews;\n};\n","import styled from 'styled-components';\n\nimport {\n  border,\n  color,\n  flexbox,\n  space,\n  layout,\n  shadow,\n  typography,\n  grid,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  border,\n  color,\n  flexbox,\n  shadow,\n  layout,\n  space,\n  typography,\n  grid\n);\n","import axios from 'axios';\n\nconst KEY = 'fc60a6bdb24ebf37b614cab96927d720';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrending = async () => {\n  const { data } = await axios('/trending/movie/day', {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios(`/movie/${movieId}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return data.results;\n};\n\nexport const getSearchMovies = async query => {\n  const { data } = await axios('/search/movie', {\n    params: {\n      api_key: KEY,\n      include_adult: false,\n      query,\n    },\n  });\n\n  return data.results;\n};\n\nexport const startImageUrl = 'https://image.tmdb.org/t/p/w500';\n"],"names":["ReviewsList","styled","Review","reviews","movieId","useParams","useState","setReviews","useEffect","getMovieReviews","then","catch","error","console","log","useGetMovieReviews","as","p","length","map","author","content","id","created_at","Date","toLocaleDateString","Box","border","color","flexbox","shadow","layout","space","typography","grid","KEY","axios","getTrending","params","api_key","data","results","getMovieDetails","getMovieCast","cast","getSearchMovies","query","include_adult","startImageUrl"],"sourceRoot":""}